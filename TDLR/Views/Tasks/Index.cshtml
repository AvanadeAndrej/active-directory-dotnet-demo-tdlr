@Styles.Render("~/Content/tasks")

@{
    ViewBag.Title = "Tasks";
}

<center class="page-body">
    @if (User.Identity.IsAuthenticated)
    {
        <h2>@User.Identity.Name's tasks</h2>

        <div class="container">
            <hr />
            <p class="generic-error text-danger" hidden>An error occurred, you might need to refresh the page.</p>
            <div class="row">
                <form role="form" method="post" action="/tasks">
                    <div class="add-task col-md-10">
                        <div class="form-group">
                            <input type="text" name="text" id="addTask" class="add-task form-control input-sm" placeholder="Add a task...">
                        </div>
                    </div>
                    <div class="add-task col-md-2">
                        <input type="submit" value="Add" class="btn btn-block btn-em">
                    </div>
                </form>
            </div>
        </div>


        <div class="container">
            <div class="row">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th class="col-md-6">Task</th>
                            <th class="col-md-2">Status</th>
                            <th class="col-md-4"></th>
                        </tr>
                    </thead>
                    <tbody>

                        @foreach (Tdlr.Models.Task task in (List<Tdlr.Models.Task>)ViewData["tasks"])
                        {
                            <tr>
                                <td class="col-md-6 task-text task">@task.TaskText</td>
                                <td class="col-md-2 task">
                                    <select name="task-id:@task.TaskID" class="task-status" data-og-value="@task.Status">
                                        @foreach (string status in Tdlr.Utils.Globals.Statuses)
                                        {
                                            if (status == task.Status)
                                            {
                                                <option value="@status" selected class="task-status">@status</option>
                                            }
                                            else
                                            {
                                                <option value="@status" class="task-status">@status</option>
                                            }
                                        }
                                    </select>
                                </td>
                                <td class="col-md-4 task">
                                    @if (task.Creator == (string)ViewData["userId"])
                                    {
                                        <button name="share" type="button" value="@task.TaskID" class="task-action task-share" data-toggle="modal" data-target="#myModal"><i class="fa fa-share-alt fa-lg"></i></button>
                                        <button name="delete" type="button" value="@task.TaskID" class="task-action task-delete"><i class="fa fa-trash-o fa-lg"></i></button>
                                        <button name="update" type="button" value="@task.TaskID" class="task-action task-save" hidden><i class="fa fa-floppy-o fa-lg"></i></button>
                                        <div class="task-confirm">
                                            <div class="task-confirm-hide" hidden>
                                                <button type="button" name="confirmDelete" value="@task.TaskID" class="task-confirm btn btn-danger">Confirm</button>
                                                <button name="cancelDelete" type="button" value="@task.TaskID" class="task-cancel btn">Nevermind</button>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="task-owner">@task.CreatorName</div>
                                        <button name="updateTasks" value="@task.TaskID" class="task-action task-save" hidden><i class="fa fa-floppy-o fa-lg"></i></button>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</center>

<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body">
                <input type="text" name="search" id="search" class="search form-control input-sm" placeholder="Search for users...">
                <table class="table table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Shared With</th>
                        </tr>
                    </thead>
                    <tbody class="share-modal"></tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-share" data-dismiss="modal">Save Changes</button>
                <button type="button" class="btn btn-share-cancel" data-dismiss="modal">Cancel</button>
            </div>
        </div>

    </div>
</div>

@Scripts.Render("~/Scripts/tasks")

<script>
    // People/Group Picker Code
    var maxResultsPerPage = 14;
    var input = document.getElementById("search");
    var $input = $(input);
    var tenant = "@ViewData["tenant"]";

    var picker = new AadPicker(maxResultsPerPage, input, "/proxy/search", tenant);

    $input.on("picker-select", function (e) {
        appendShare({ objectId: picker.Selected().objectId, displayName: picker.Selected().displayName });
    });
</script>

